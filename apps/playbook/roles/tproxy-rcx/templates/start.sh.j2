#!/bin/bash

ulimit -c unlimited

if [ -z $JAVA_HOME ]; then
    JAVA_BIN=java
else
    JAVA_BIN=$JAVA_HOME/bin/java
fi

{% set zookeeper_list = [] %}
{% for dict in zookeeper_string %}
{{ zookeeper_list.append(dict.ip~":"~dict.port) }}
{% endfor %}


if [ -z $JAVA_OPOTS ]; then
    JAVA_OPTS="-XX:+HeapDumpOnOutOfMemoryError -XX:ErrorFile=. -XX:HeapDumpPath=. -XX:+UseConcMarkSweepGC -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintHeapAtGC -Xloggc:{{ logsDir }}/gc.log -Duser.timezone=UTC -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname={{ ansible_default_ipv4.address }} -Dcom.sun.management.jmxremote.port=7092  -Duser.timezone=UTC -Denv.zookeeper.clusters={{ zookeeper_list | join(',') }} -Denv.node.name={{ ansible_default_ipv4.address }} -Denv.cluster.name=prod -Druntime.rmtp.port={{ rmtp_public_port }} -Druntime.websocket.port={{ rmtp_ws_public_port }} -Druntime.service.port=8899 -Druntime.service.host={{ ansible_default_ipv4.address }} -Druntime.androidpush.port={{ apush_public_port }} -Druntime.threadpool.model=apiThreadPool -Denv.dbcluster.name=prod"
else
    JAVA_OPTS="$JAVA_OPTS -XX:+HeapDumpOnOutOfMemoryError -XX:ErrorFile=. -XX:HeapDumpPath=. -XX:+UseConcMarkSweepGC -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintHeapAtGC -Xloggc:{{ logsDir }}/gc.log -Duser.timezone=UTC -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname={{ ansible_default_ipv4.address }} -Dcom.sun.management.jmxremote.port=7092 -Duser.timezone=UTC -Denv.zookeeper.clusters={{ zookeeper_list | join(',') }} -Denv.node.name={{ ansible_default_ipv4.address }} -Denv.cluster.name=prod -Druntime.rmtp.port={{ rmtp_public_port }} -Druntime.websocket.port={{ rmtp_ws_public_port }} -Druntime.service.port=8899 -Druntime.service.host={{ ansible_default_ipv4.address }} -Druntime.androidpush.port={{ apush_public_port }} -Denv.dbcluster.name=prod -Druntime.threadpool.model=apiThreadPool"
fi

echo "$(date)"

SCRIPT_PATH=$(dirname $0)
echo "CURRENT_PATH: $SCRIPT_PATH"
cd $SCRIPT_PATH

CP=$(find libs -name "*.jar" -exec printf :{} ';')

ARGS="$JAVA_OPTS -cp $(ls ./rcx.bootstrap*)$CP:./configs rcx.bootstrap.Bootstrap"

echo "Command: $JAVA_BIN $ARGS"

exec $JAVA_BIN $ARGS

